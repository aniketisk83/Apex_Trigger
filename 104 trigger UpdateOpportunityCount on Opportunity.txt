trigger UpdateOpportunityCount on Opportunity (after insert, after update, after delete) {

    // Set to hold Account IDs for which Opportunity count needs to be updated
    Set<Id> accountIdsToUpdate = new Set<Id>();

    // Collect Account IDs from the affected Opportunities
    if (Trigger.isInsert || Trigger.isUpdate) {
        for (Opportunity opp : Trigger.new) {
            if (opp.AccountId != null) {
                accountIdsToUpdate.add(opp.AccountId);
            }
        }
    }
    
    if (Trigger.isDelete) {
        for (Opportunity opp : Trigger.old) {
            if (opp.AccountId != null) {
                accountIdsToUpdate.add(opp.AccountId);
            }
        }
    }

    // Query Opportunities related to the Account that are in the specific stages
    List<AggregateResult> opportunityCounts = [
        SELECT AccountId, COUNT(Id) 
        FROM Opportunity 
        WHERE AccountId IN :accountIdsToUpdate 
        AND StageName IN ('Prospecting', 'Negotiation')
        GROUP BY AccountId
    ];

    // Map to hold the count of Opportunities for each Account
    Map<Id, Integer> accountOpportunityCountMap = new Map<Id, Integer>();

    // Populate the map with Opportunity counts
    for (AggregateResult ar : opportunityCounts) {
        accountOpportunityCountMap.put((Id)ar.get('AccountId'), (Integer)ar.get('expr0'));
    }

    // List to hold Account records to be updated
    List<Account> accountsToUpdate = new List<Account>();

    // Iterate over each Account ID to update the Opportunity_Count__c field
    for (Id accountId : accountIdsToUpdate) {
        Integer opportunityCount = accountOpportunityCountMap.get(accountId);
        
        // If no Opportunity count exists for this Account, set it to 0
        if (opportunityCount == null) {
            opportunityCount = 0;
        }

        // Create or update Account with the Opportunity count
        Account acc = new Account(Id = accountId, Opportunity_Count__c = opportunityCount);
        accountsToUpdate.add(acc);
    }

    // Update Accounts with new Opportunity count
    if (!accountsToUpdate.isEmpty()) {
        update accountsToUpdate;
    }
}
