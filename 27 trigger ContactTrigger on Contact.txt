trigger ContactTrigger on Contact (after update, after delete, after undelete) {
    
    // Set to store unique Account IDs to update
    
	Set<Id> accountIds = new Set<Id>();

    // Handle after update scenario
   
   if (Trigger.isUpdate) {
       
	   for (Contact con : Trigger.new) {
       
	   if (con.AccountId != null) {
              
			  accountIds.add(con.AccountId);
            }
        }
        
		for (Contact oldCon : Trigger.old) {
           
		   if (oldCon.AccountId != null) {
              
			  accountIds.add(oldCon.AccountId);
            }
        }
    }

    // Handle after delete scenario
   
   if (Trigger.isDelete) {
       
	   for (Contact con : Trigger.old) {
          
		  if (con.AccountId != null) {
            
			accountIds.add(con.AccountId);
            }
        }
    }

    // Handle after undelete scenario
  
  if (Trigger.isUndelete) {
       
	   for (Contact con : Trigger.new) {
           
		   if (con.AccountId != null) {
               
			   accountIds.add(con.AccountId);
            }
        }
    }

    // Update the Number_of_Contacts__c field on related Accounts
   
   if (!accountIds.isEmpty()) {
        
		List<Account> accountsToUpdate = new List<Account>();
        
		for (Id accId : accountIds) {
           
		   Integer contactCount = [SELECT COUNT() FROM Contact WHERE AccountId = :accId];
            accountsToUpdate.add(new Account(Id = accId, Number_of_Contacts__c = contactCount));
        }
        
        // Update the Account records with the new count
        
		if (!accountsToUpdate.isEmpty()) {
           
		   update accountsToUpdate;
        }
    }
}
